From: Michael Olbrich <m.olbrich@pengutronix.de>
Date: Sun, 4 Jul 2021 08:53:07 +0200
Subject: [PATCH] make sure the generated files end with a newline

Signed-off-by: Michael Olbrich <m.olbrich@pengutronix.de>
---
 third_party/spirv-tools/utils/generate_grammar_tables.py  | 14 +++++++-------
 third_party/spirv-tools/utils/generate_registry_tables.py |  2 +-
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/third_party/spirv-tools/utils/generate_grammar_tables.py b/third_party/spirv-tools/utils/generate_grammar_tables.py
index c4ed180ad108..6233837fcb61 100755
--- a/third_party/spirv-tools/utils/generate_grammar_tables.py
+++ b/third_party/spirv-tools/utils/generate_grammar_tables.py
@@ -829,18 +829,18 @@ def main():
             make_path_to_file(args.operand_kinds_output)
             with open(args.core_insts_output, 'w') as f:
                 f.write(generate_instruction_table(
-                    core_grammar['instructions']))
+                    core_grammar['instructions']) + '\n')
             with open(args.operand_kinds_output, 'w') as f:
-                f.write(generate_operand_kind_table(operand_kinds))
+                f.write(generate_operand_kind_table(operand_kinds) + '\n')
         if args.extension_enum_output is not None:
             make_path_to_file(args.extension_enum_output)
             with open(args.extension_enum_output, 'w') as f:
-                f.write(generate_extension_enum(extensions))
+                f.write(generate_extension_enum(extensions) + '\n')
         if args.enum_string_mapping_output is not None:
             make_path_to_file(args.enum_string_mapping_output)
             with open(args.enum_string_mapping_output, 'w') as f:
                 f.write(generate_all_string_enum_mappings(
-                    extensions, operand_kinds))
+                    extensions, operand_kinds) + '\n')
 
     if args.extinst_glsl_grammar is not None:
         with open(args.extinst_glsl_grammar) as json_file:
@@ -848,7 +848,7 @@ def main():
             make_path_to_file(args.glsl_insts_output)
             with open(args.glsl_insts_output, 'w') as f:
                 f.write(generate_extended_instruction_table(
-                    grammar, 'glsl'))
+                    grammar, 'glsl') + '\n')
 
     if args.extinst_opencl_grammar is not None:
         with open(args.extinst_opencl_grammar) as json_file:
@@ -856,7 +856,7 @@ def main():
             make_path_to_file(args.opencl_insts_output)
             with open(args.opencl_insts_output, 'w') as f:
                 f.write(generate_extended_instruction_table(
-                    grammar, 'opencl'))
+                    grammar, 'opencl') + '\n')
 
     if args.extinst_vendor_grammar is not None:
         with open(args.extinst_vendor_grammar) as json_file:
@@ -867,7 +867,7 @@ def main():
             name = name[start:-len('.grammar.json')].replace('-', '_')
             with open(args.vendor_insts_output, 'w') as f:
                 f.write(generate_extended_instruction_table(
-                    grammar, name, args.vendor_operand_kind_prefix))
+                    grammar, name, args.vendor_operand_kind_prefix) + '\n')
 
 
 if __name__ == '__main__':
diff --git a/third_party/spirv-tools/utils/generate_registry_tables.py b/third_party/spirv-tools/utils/generate_registry_tables.py
index 28152ef3eb07..a08a5734e99a 100755
--- a/third_party/spirv-tools/utils/generate_registry_tables.py
+++ b/third_party/spirv-tools/utils/generate_registry_tables.py
@@ -83,7 +83,7 @@ def main():
 
     mkdir_p(os.path.dirname(args.generator_output))
     with open(args.generator_output, 'w') as f:
-      f.write(generate_vendor_table(registry))
+      f.write(generate_vendor_table(registry) + '\n')
 
 
 if __name__ == '__main__':
